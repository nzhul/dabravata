@model Dabravata.Models.InputModels.CreateRoomInputModel

<div class="row">
    <div class="col-md-11">
        <h3>@ViewBag.Title</h3>
        <hr />
    </div>
</div>
<div class="row">
    @using (Html.BeginForm((string)ViewBag.FormMode, "Rooms", FormMethod.Post, new { @class = "form-horizontal " }))
    {

        var slugDisabled = "disabled";
        var columnWidth = 7;
        if (ViewBag.FormMode == "Edit")
        {
            columnWidth = 7;
        }
        else
        {
            columnWidth = 7;
        }

        @Html.AntiForgeryToken()

        <div class="col-md-@columnWidth">
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedCategoryId, new { @class = "dab-input-label" })
                @Html.ValidationMessageFor(model => model.SelectedCategoryId)
                @Html.DropDownListFor(model => model.SelectedCategoryId, Model.Categories, " -- Избери Категория --", new { @id = "categories-dropdown", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RoomNumber, new { @class = "dab-input-label" })
                @Html.ValidationMessageFor(model => model.RoomNumber)
                @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Пр: 104" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "dab-input-label" })
                @Html.ValidationMessageFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Пр: Стая за двама" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Summary, new { @class = "dab-input-label" })
                @Html.ValidationMessageFor(model => model.Summary)
                @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control", placeholder = "Описание на стаята" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "dab-input-label" })
                @Html.ValidationMessageFor(model => model.Description)
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Описание на стаята" } })
            </div>
            <div class="form-group">
                <div class="col-md-6" style="padding: 0px;">
                    @Html.LabelFor(model => model.Price, new { @class = "dab-input-label" })
                    @Html.ValidationMessageFor(model => model.Price)
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Пр: 45" } })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.IsPriceVisible, new { @class = "dab-input-label" })
                    @Html.CheckBoxFor(model => model.IsPriceVisible)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-4" style="padding: 0px;">
                    @Html.LabelFor(model => model.IsFeatured, new { @class = "dab-input-label" })<br />
                    @Html.CheckBoxFor(model => model.IsFeatured)
                </div>
                <div class="col-md-4" style="padding: 0px;">
                    @Html.LabelFor(model => model.DisplayOrder, new { @class = "dab-input-label" })<br />
                    @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control", placeholder = "Пр: 1" } })
                </div>
            </div>
            <hr style="height:2px;background:gray;" />
            <h3>Удобства:</h3>
            <div class="form-group">
                @{
        int count = 0;
        string isChecked = "";
        foreach (var availableRoomFeature in Model.AvailableRoomFeatures)
        {
            if (Model.SelectedRoomFeatureIds != null && Model.SelectedRoomFeatureIds.Contains(availableRoomFeature.Id))
            {
                isChecked = "checked=checked";
            }

                <input name="SelectedRoomFeatureIds" id="Dynamic @count" @isChecked type="checkbox" value="@availableRoomFeature.Id" />
                <label for="Dynamic @count" class="dab-input-label"> @availableRoomFeature.Name</label>
            count++;
            isChecked = "";
        }
}
            </div>
            <div style="clear:both;">&nbsp;</div>
            <div class="form-group">
                <button type="submit" class="btn btn-warning">
                    @ViewBag.FormModeText
                </button>
            </div>
        </div>
    }

    @if (ViewBag.FormMode == "Edit")
    {
        <div class="col-sm-5">
            <!-- Guest Checkout Panel Starts -->
            <div class="panel panel-smart">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Добави Снимки
                    </h3>
                </div>
                <div class="panel-body">
                    @if (Model.Images != null && Model.Images.Count() > 0)
                    {
                        foreach (var image in Model.Images.OrderByDescending(x => x.DateAdded))
                        {
                            var imageSrc = "../../../" + @image.ImagePath + "_detailsSmallThumb.jpg";
                            var isPrimary = @image.IsPrimary ? "is-primary" : " ";
                            var imageThumbnailBoxId = "thumb-box-" + image.Id;

                            <div id="@imageThumbnailBoxId">
                                <img src="@imageSrc" class="product-image-thumbnail-admin" />
                                <div class="thumbnail-hover @isPrimary">
                                    @if (!image.IsPrimary)
                                    {
                                        <a href="@Url.Action("MakePrimary", "Rooms", new { imageId = image.Id, productId = Model.Id })" class="fa fa-arrow-up"
                                           data-toggle="tooltip"
                                           data-placement="top"
                                           title="Направи картинката ГЛАВНА!"></a>
                                        @*<a href="#" class="fa fa-times"
                                            data-toggle="tooltip"
                                            data-placement="top"
                                            title="Изтрии картинката!"></a>*@
                                        @Ajax.ActionLink(" ", "DeleteImage", new { imageId = image.Id },
                                                new AjaxOptions
                                                {
                                                    InsertionMode = InsertionMode.Replace,
                                                    UpdateTargetId = imageThumbnailBoxId,
                                                    HttpMethod = "Post",
                                                }, new { @class = "fa fa-times", @data_toggle = "tooltip", @data_placement = "top", @title = "Изтрии картинката!" })
                                    }
                                    else
                                    {
                                        <strong>Главна</strong>
                                    }
                                </div>
                            </div>
                        }
                        <div class="clearfix"></div>
                        <hr />
                    }
                    else
                    {
                        <div class="alert alert-dismissable alert-info">
                            <button type="button" class="close" data-dismiss="alert">×</button>
                            <p>
                                Продукта все още няма добавени никакви снимки!<br />
                                Използвай <strong>формата</strong> отдолу за да добавиш
                            </p>
                        </div>
                    }

                    @using (Html.BeginForm("UploadPhotos", "Rooms", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.ValidationSummary()

                        <div class="form-field">
                            <p>Избери снимки:</p>
                            <div class="upload-container">
                                <div class="upload">
                                    <input type="file" name="files" id="file1" />
                                    <img src="@Url.Content("~/Content/images/delete.png")" class="upload-img-remove-icon" alt="Remove picture." />
                                    <input type="hidden" name="RoomId" value="@Model.Id" />
                                    <input type="hidden" name="RoomCategoryId" value="@Model.SelectedCategoryId" />
                                </div>
                            </div>
                        </div>

                        <div class="form-field">
                            <input type="submit" class="btn btn-primary" style="margin:10px 0 0 0px;" value="Качи снимките" />
                        </div>
                    }
                </div>
            </div>
            <!-- Guest Checkout Panel Ends -->
        </div>
    }
</div>